{"version":3,"sources":["components/GameBoard/GameBoard.module.css","components/GameBoard/Field/Field.module.css","components/UI/Message/Message.module.css","hoc/Layout/Layout.module.css","components/Score/Score.module.css","assets/xo-icons.png","containers/Game/Game.module.css","components/Button/Button.module.css","hoc/Aux/Aux.js","hoc/Layout/Layout.js","components/Score/Score.js","components/GameBoard/Field/Field.js","components/GameBoard/GameBoard.js","components/Button/Button.js","components/UI/Message/Message.js","containers/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GameBoard","HorizontalLine1","HorizontalLine2","HorizontalLine3","VerticalLine1","VerticalLine2","VerticalLine3","DiagonalLine1","DiagonalLine2","Field","XFieldBackground","OFieldBackground","NoBackground","Field_1","Field_2","Field_3","Field_4","Field_5","Field_6","Field_7","Field_8","Field_9","Message","X","O","Title","Score","__webpack_require__","p","Content","Button","aux","props","children","layout","react_default","a","createElement","Aux","className","classes","score","src","XOimage","alt","mouseHoverHandler","event","_this","mouseHover","clickHandler","clicked","_this2","this","multipleClasses","fieldNo","join","gameReset","field","classList","remove","ref","onMouseOver","bind","onMouseOut","onClick","id","Component","gameBoard","lineWon","pop","push","GameBoard_Field_Field","button","disabled","message","winner","msg","Game","state","xTurn","gameOver","fieldsArr","x","o","modifiedFieldsArr","Object","toConsumableArray","clickedField","target","split","setState","fieldClasses","_event$target$classLi","hoveredField","type","add","apply","field1","field2","field3","field4","field5","field6","field7","field8","field9","isGameWon","toUpperCase","updateScore","objectSpread","checkGameState","playAgain","App","Layout","containers_Game_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App","title","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0b515fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameBoard\":\"GameBoard_GameBoard__3670x\",\"HorizontalLine1\":\"GameBoard_HorizontalLine1__2Yi03\",\"HorizontalLine2\":\"GameBoard_HorizontalLine2__ZL_l5\",\"HorizontalLine3\":\"GameBoard_HorizontalLine3__3g0yz\",\"VerticalLine1\":\"GameBoard_VerticalLine1__2ZqCL\",\"VerticalLine2\":\"GameBoard_VerticalLine2__24ply\",\"VerticalLine3\":\"GameBoard_VerticalLine3__1tAkY\",\"DiagonalLine1\":\"GameBoard_DiagonalLine1__3hWdY\",\"DiagonalLine2\":\"GameBoard_DiagonalLine2__2jLzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Field\":\"Field_Field__Y9_KN\",\"XFieldBackground\":\"Field_XFieldBackground__3M9EU\",\"OFieldBackground\":\"Field_OFieldBackground__1iEDm\",\"NoBackground\":\"Field_NoBackground__2-Jid\",\"Field_1\":\"Field_Field_1__1NAoF\",\"Field_2\":\"Field_Field_2__mMlMW\",\"Field_3\":\"Field_Field_3__33H_F\",\"Field_4\":\"Field_Field_4__2CKI_\",\"Field_5\":\"Field_Field_5__2sPU9\",\"Field_6\":\"Field_Field_6__2Yau6\",\"Field_7\":\"Field_Field_7__1cDby\",\"Field_8\":\"Field_Field_8__1vDEF\",\"Field_9\":\"Field_Field_9__3IBXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__2k3X6\",\"X\":\"Message_X__1T8cB\",\"O\":\"Message_O__1-0D4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Layout_Title__3DpxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Score\":\"Score_Score__3LkII\"};","module.exports = __webpack_public_path__ + \"static/media/xo-icons.8d50e478.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Game_Content__1cYDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3fg2s\"};","const aux = (props) => props.children;\n\nexport default aux;\n","import React from 'react';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css';\n\nconst layout = (props) => (\n    <Aux>\n        <h1 className={classes.Title}><strong>TIC-TAC-TOE GAME</strong></h1>\n        <main>{props.children}</main>\n    </Aux>\n);\n\nexport default layout;\n","import React from 'react';\nimport classes from './Score.module.css';\nimport Aux from '../../hoc/Aux/Aux';\nimport XOimage from '../../assets/xo-icons.png';\n\nconst score = (props) => (\n    <Aux>\n        <img src={XOimage} alt='XOimage' />\n        <div className={classes.Score}><strong>{props.score['x']}</strong> : <strong>{props.score['o']}</strong></div>\n    </Aux>\n);\n\nexport default score;\n","import React, {Component} from 'react';\nimport classes from './Field.module.css';\n\nclass Field extends Component {\n\n    mouseHoverHandler = (event) => {\n        this.props.mouseHover(event, [classes.XFieldBackground, classes.OFieldBackground]);\n    }\n\n    clickHandler = (event) => {\n        this.props.clicked(event);\n    }\n\n    render () {\n        let multipleClasses = [classes.Field, classes[this.props.fieldNo]];\n        multipleClasses = multipleClasses.join(' ');\n\n        if (this.props.gameReset) {\n            this.field.classList.remove(classes.XFieldBackground, classes.OFieldBackground);\n        }\n\n        return (\n            <div\n                ref={(field) => {this.field = field}}\n                className={multipleClasses}\n                onMouseOver={this.mouseHoverHandler.bind(this)}\n                onMouseOut={this.mouseHoverHandler.bind(this)}\n                onClick={this.clickHandler.bind(this)}\n                id={this.props.fieldNo}\n                >\n            </div>\n        );\n    }\n}\n\nexport default Field;\n","import React from 'react';\nimport classes from './GameBoard.module.css';\nimport Field from './Field/Field';\n\nconst gameBoard = (props) => {\n    let multipleClasses = [classes.GameBoard];\n\n    if (props.lineWon) {\n        multipleClasses.pop();\n        switch(props.lineWon) {\n            case \"horizontal1\":\n                multipleClasses.push(classes.HorizontalLine1);\n                break;\n            case \"horizontal2\":\n                multipleClasses.push(classes.HorizontalLine2);\n                break;\n            case \"horizontal3\":\n                multipleClasses.push(classes.HorizontalLine3);\n                break;\n            case \"vertical1\":\n                multipleClasses.push(classes.VerticalLine1);\n                break;\n            case \"vertical2\":\n                multipleClasses.push(classes.VerticalLine2);\n                break;\n            case \"vertical3\":\n                multipleClasses.push(classes.VerticalLine3);\n                break;\n            case \"diagonal1\":\n                multipleClasses.push(classes.DiagonalLine1);\n                break;\n            case \"diagonal2\":\n                multipleClasses.push(classes.DiagonalLine2);\n                break;\n            default:\n                break;\n        }\n    }\n\n    multipleClasses.join(' ');\n\n    return(\n        <div className={multipleClasses}>\n            <Field\n                fieldNo='Field_1'\n                mouseHover={props.mouseHover}\n                clicked={props.clicked}\n                gameReset={props.gameReset} />\n            <Field\n                fieldNo='Field_2'\n                mouseHover={props.mouseHover}\n                clicked={props.clicked}\n                gameReset={props.gameReset} />\n            <Field\n                fieldNo='Field_3'\n                mouseHover={props.mouseHover}\n                clicked={props.clicked}\n                gameReset={props.gameReset} />\n            <Field\n                fieldNo='Field_4'\n                mouseHover={props.mouseHover}\n                clicked={props.clicked}\n                gameReset={props.gameReset} />\n            <Field\n                fieldNo='Field_5'\n                mouseHover={props.mouseHover}\n                clicked={props.clicked}\n                gameReset={props.gameReset} />\n            <Field\n                fieldNo='Field_6'\n                mouseHover={props.mouseHover}\n                clicked={props.clicked}\n                gameReset={props.gameReset} />\n            <Field\n                fieldNo='Field_7'\n                mouseHover={props.mouseHover}\n                clicked={props.clicked}\n                gameReset={props.gameReset} />\n            <Field\n                fieldNo='Field_8'\n                mouseHover={props.mouseHover}\n                clicked={props.clicked}\n                gameReset={props.gameReset} />\n            <Field\n                fieldNo='Field_9'\n                mouseHover={props.mouseHover}\n                clicked={props.clicked}\n                gameReset={props.gameReset} />\n        </div>\n    );\n}\n\nexport default gameBoard;\n","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button\n        className={classes.Button}\n        onClick={props.clicked}\n        disabled={props.disabled}>Play again! </button>\n);\n\nexport default button;\n","import React from 'react';\nimport classes from './Message.module.css';\n\nconst message = (props) => {\n    let multipleClasses = [classes.Message, classes[props.winner]].join(' ');\n\n    return (\n        <div className={multipleClasses}>{props.msg}</div>\n    );\n}\n\nexport default message;\n","import React, {Component} from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Score from '../../components/Score/Score';\nimport GameBoard from '../../components/GameBoard/GameBoard';\nimport classes from './Game.module.css';\nimport Button from '../../components/Button/Button';\nimport Message from '../../components/UI/Message/Message';\n\nclass Game extends Component {\n    state = {\n        xTurn: true,\n        gameOver: false,\n        gameReset: false,\n        msg: \"\",\n        winner: \"\",\n        lineWon: \"\",\n        fieldsArr: [],\n        score: {\n            x: 0,\n            o: 0\n        }\n    }\n\n    clickHandler(event) {\n        if (!this.state.gameOver) {\n            const modifiedFieldsArr = [...this.state.fieldsArr];\n            const clickedField = event.target.id.split('_')[1];\n\n            if (!this.state.fieldsArr[clickedField - 1]) {\n                this.state.xTurn ?\n                    modifiedFieldsArr[clickedField - 1] = 'x':\n                    modifiedFieldsArr[clickedField - 1] = 'o';\n\n                this.setState({\n                    xTurn: !this.state.xTurn,\n                    gameReset: false,\n                    fieldsArr: modifiedFieldsArr\n                });\n            }\n        }\n    }\n\n    mouseHoverHandler(event, fieldClasses) {\n        if (!this.state.gameOver) {\n            const hoveredField = event.target.id.split('_')[1];\n\n            if (!this.state.fieldsArr[hoveredField - 1]) {\n                if (event.type === 'mouseover') {\n                    if (this.state.xTurn) {\n                        event.target.classList.add(fieldClasses[0]);\n                    } else {\n                        event.target.classList.add(fieldClasses[1]);\n                    }\n                } else {\n                    event.target.classList.remove(...fieldClasses);\n                }\n            }\n        }\n    }\n\n    checkGameState() {\n        const field1 = this.state.fieldsArr[0];\n        const field2 = this.state.fieldsArr[1];\n        const field3 = this.state.fieldsArr[2];\n        const field4 = this.state.fieldsArr[3];\n        const field5 = this.state.fieldsArr[4];\n        const field6 = this.state.fieldsArr[5];\n        const field7 = this.state.fieldsArr[6];\n        const field8 = this.state.fieldsArr[7];\n        const field9 = this.state.fieldsArr[8];\n        let isGameWon = false;\n\n        if (field1 && field2 && field3 &&\n            field1 === field2 && field2 === field3) {\n            this.setState({\n                gameOver: true,\n                msg: field1.toUpperCase() + \" wins!\",\n                winner: field1.toUpperCase(),\n                lineWon: \"horizontal1\"\n            });\n            this.updateScore(field1);\n            isGameWon = true;\n        }\n\n        if (field4 && field5 && field6 &&\n            field4 === field5 && field5 === field6) {\n            this.setState({\n                gameOver: true,\n                msg: field4.toUpperCase() + \" wins!\",\n                winner: field4.toUpperCase(),\n                lineWon: \"horizontal2\"\n            });\n            this.updateScore(field4);\n            isGameWon = true;\n        }\n\n        if (field7 && field8 && field9 &&\n            field7 === field8 && field8 === field9) {\n            this.setState({\n                gameOver: true,\n                msg: field7.toUpperCase() + \" wins!\",\n                winner: field7.toUpperCase(),\n                lineWon: \"horizontal3\"\n            });\n            this.updateScore(field7);\n            isGameWon = true;\n        }\n\n        if (field1 && field4 && field7 &&\n            field1 === field4 && field4 === field7) {\n            this.setState({\n                gameOver: true,\n                msg: field1.toUpperCase() + \" wins!\",\n                winner: field1.toUpperCase(),\n                lineWon: \"vertical1\"\n            });\n            this.updateScore(field1);\n            isGameWon = true;\n        }\n\n        if (field2 && field5 && field8 &&\n            field2 === field5 && field5 === field8) {\n            this.setState({\n                gameOver: true,\n                msg: field2.toUpperCase() + \" wins!\",\n                winner: field2.toUpperCase(),\n                lineWon: \"vertical2\"\n            });\n            this.updateScore(field2);\n            isGameWon = true;\n        }\n\n        if (field3 && field6 && field9 &&\n            field3 === field6 && field6 === field9) {\n            this.setState({\n                gameOver: true,\n                msg: field3.toUpperCase() + \" wins!\",\n                winner: field3.toUpperCase(),\n                lineWon: \"vertical3\"\n            });\n            this.updateScore(field3);\n            isGameWon = true;\n        }\n\n        if (field1 && field5 && field9 &&\n            field1 === field5 && field5 === field9) {\n            this.setState({\n                gameOver: true,\n                msg: field1.toUpperCase() + \" wins!\",\n                winner: field1.toUpperCase(),\n                lineWon: \"diagonal1\"\n            });\n            this.updateScore(field1);\n            isGameWon = true;\n        }\n\n        if (field3 && field5 && field7 &&\n            field3 === field5 && field5 === field7) {\n            this.setState({\n                gameOver: true,\n                msg: field3.toUpperCase() + \" wins!\",\n                winner: field3.toUpperCase(),\n                lineWon: \"diagonal2\"\n            });\n            this.updateScore(field3);\n            isGameWon = true;\n        }\n\n        if (!isGameWon && !this.state.gameOver && field1 && field2 && field3 &&\n            field4 && field5 && field6 && field7 && field8 && field9) {\n            this.setState({\n                gameOver: true,\n                msg: \"It's a tie!\"\n            });\n        }\n    }\n\n    updateScore(winner) {\n        const score = {...this.state.score}\n\n        score[winner]++;\n        this.setState({score: score});\n    }\n\n    playAgain() {\n        this.setState({\n            xTurn: true,\n            gameOver: false,\n            gameReset: true,\n            msg: \"\",\n            winner: \"\",\n            lineWon: \"\",\n            fieldsArr: []\n        });\n    }\n\n    componentDidUpdate() {\n        if (!this.state.gameOver) {\n            this.checkGameState();\n        }\n    }\n\n    render() {\n        return (\n            <Aux>\n                <div className={classes.Content}>\n                    <Score score={this.state.score} />\n                    <Message\n                        msg={this.state.msg}\n                        winner={this.state.winner} />\n                    <GameBoard\n                        xTurn={this.state.xTurn}\n                        mouseHover={this.mouseHoverHandler.bind(this)}\n                        clicked={this.clickHandler.bind(this)}\n                        gameReset={this.state.gameReset}\n                        lineWon={this.state.lineWon} />\n                    <Button\n                        clicked={this.playAgain.bind(this)}\n                        disabled={!this.state.gameOver} />\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport Game from './containers/Game/Game';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Layout>\n                    <Game />\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App title=\"Tic-Tac-Toe Game\" />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}